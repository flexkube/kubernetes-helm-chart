apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-controller-manager
  namespace: kube-system
  labels:
    tier: control-plane
    k8s-app: kube-controller-manager
    {{- if eq .Values.replicas 1.0 }}
    pdb: controlplane
    {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- if eq .Values.replicas 1.0 }}
      maxUnavailable: 0
      {{- else }}
      maxUnavailable: 1
      {{- end }}
  selector:
    matchLabels:
      tier: control-plane
      k8s-app: kube-controller-manager
      {{- if eq .Values.replicas 1.0 }}
      pdb: controlplane
      {{- end }}
  template:
    metadata:
      labels:
        tier: control-plane
        k8s-app: kube-controller-manager
        {{- if eq .Values.replicas 1.0 }}
        pdb: controlplane
        {{- end }}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: tier
                operator: In
                values:
                - control-plane
              - key: k8s-app
                operator: In
                values:
                - kube-controller-manager
            topologyKey: kubernetes.io/hostname
      #nodeSelector:
      #  node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: kube-controller-manager
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - name: kube-controller-manager
        image: k8s.gcr.io/hyperkube:v{{ .Chart.AppVersion }}
        command:
        - ./hyperkube
        - kube-controller-manager
        - --use-service-account-credentials
        - --cluster-signing-cert-file=/etc/kubernetes/secrets/ca.crt
        - --cluster-signing-key-file=/etc/kubernetes/secrets/ca.key
        - --service-account-private-key-file=/etc/kubernetes/secrets/service-account.key
        - --root-ca-file=/etc/kubernetes/secrets/root.crt
        - --kubeconfig=/etc/kubernetes/kubeconfig
        - --master=https://$(HOST_IP):6443
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 10257
          initialDelaySeconds: 15
          timeoutSeconds: 15
        volumeMounts:
        - name: kube-controller-manager
          mountPath: /etc/kubernetes
          readOnly: true
        - name: secrets
          mountPath: /etc/kubernetes/secrets
          readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: kube-controller-manager
      - name: kube-controller-manager
        configMap:
          name: kube-controller-manager
      dnsPolicy: Default # Don't use cluster DNS.
