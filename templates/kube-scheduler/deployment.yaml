apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-scheduler
  namespace: kube-system
  labels:
    tier: control-plane
    k8s-app: kube-scheduler
    {{- if eq .Values.replicas 1.0 }}
    pdb: controlplane
    {{- end }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      {{- if eq .Values.replicas 1.0 }}
      maxUnavailable: 0
      {{- else }}
      maxUnavailable: 1
      {{- end }}
  selector:
    matchLabels:
      tier: control-plane
      k8s-app: kube-scheduler
      {{- if eq .Values.replicas 1.0 }}
      pdb: controlplane
      {{- end }}
  template:
    metadata:
      labels:
        tier: control-plane
        k8s-app: kube-scheduler
        {{- if eq .Values.replicas 1.0 }}
        pdb: controlplane
        {{- end }}
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: tier
                operator: In
                values:
                - control-plane
              - key: k8s-app
                operator: In
                values:
                - kube-scheduler
            topologyKey: kubernetes.io/hostname
      #nodeSelector:
      #  node-role.kubernetes.io/master: ""
      priorityClassName: system-cluster-critical
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: kube-scheduler
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - name: kube-scheduler
        image: k8s.gcr.io/hyperkube:v{{ .Chart.AppVersion }}
        command:
        - ./hyperkube
        - kube-scheduler
        - --config=/etc/kubernetes/kube-scheduler.yaml
        # Override address where we connect to API server
        - --master=https://$(HOST_IP):6443
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: 10259
          initialDelaySeconds: 15
          timeoutSeconds: 15
        volumeMounts:
        - name: kube-scheduler
          mountPath: /etc/kubernetes
          readOnly: true
      volumes:
      - name: kube-scheduler
        configMap:
          name: kube-scheduler
